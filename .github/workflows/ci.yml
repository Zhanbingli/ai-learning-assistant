name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint --if-present
        continue-on-error: true

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          cd client && npm ci && cd ..

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Run backend tests
        run: npm test --if-present
        continue-on-error: true

      - name: Run frontend tests
        run: cd client && npm test --if-present
        continue-on-error: true

  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          cd client && npm ci && cd ..

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Build frontend
        run: cd client && npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: client-build
          path: client/dist

  docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: docker build -t ai-learning-assistant:latest .

      - name: Test Docker image
        run: |
          docker run -d --name test-app -p 3001:3001 ai-learning-assistant:latest
          sleep 10
          curl --fail http://localhost:3001/health || exit 1
          docker stop test-app
